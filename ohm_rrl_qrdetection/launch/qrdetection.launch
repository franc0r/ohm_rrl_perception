<launch>

   <arg name="with_camera" default="false"/>
   <arg name="with_viewer" default="false"/>
   
   <arg name="input_image_topic" default="/astra/image_raw"/>
   <arg name="img_qr_topic"      default="/qr/debug_image"/>

   <group if="$(arg with_camera)">
     <node pkg="usb_cam" type="usb_cam_node" name="usb_cam">
       <param name="camera_name"     value="driver_cam" />
       <param name="camera_frame_id" value="driver_cam" />
       <param name="pixel_format"    value="yuyv"       />
       
       <remap from="/usb_cam/image_raw" to="$(arg input_image_topic)"/>
     </node>
   </group>

	<node pkg="ohm_rrl_qrdetection" type="ohm_rrl_qrdetection_node" name="qr_detector" >
		<param name="qr_topic"                  type="string" value="qr/detected"/>
		<param name="cam_subscriber_topic"   	  type="string" value="$(arg input_image_topic)"/>
		<param name="cam_publisher_topic"       type="string" value="$(arg img_qr_topic)"/>
		<param name="robot_radius"              type="double" value="0.3"/>
	</node>

  <node pkg="ohm_rrl_qrdetection" type="ohm_rrl_qr_to_world_node" name="qr_pose_estimator" output="screen">
    <param name="qr_topic"     type="string" value="qr/detected" />
    <param name="tf_cam_frame" type="string" value="/astra" />
  </node>

</launch>
